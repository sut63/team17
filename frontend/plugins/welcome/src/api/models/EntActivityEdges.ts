/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntAgency,
    EntAgencyFromJSON,
    EntAgencyFromJSONTyped,
    EntAgencyToJSON,
    EntPlace,
    EntPlaceFromJSON,
    EntPlaceFromJSONTyped,
    EntPlaceToJSON,
    EntStudent,
    EntStudentFromJSON,
    EntStudentFromJSONTyped,
    EntStudentToJSON,
    EntTerm,
    EntTermFromJSON,
    EntTermFromJSONTyped,
    EntTermToJSON,
    EntYear,
    EntYearFromJSON,
    EntYearFromJSONTyped,
    EntYearToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntActivityEdges
 */
export interface EntActivityEdges {
    /**
     * 
     * @type {EntAgency}
     * @memberof EntActivityEdges
     */
    actiAgen?: EntAgency;
    /**
     * 
     * @type {EntPlace}
     * @memberof EntActivityEdges
     */
    actiPlace?: EntPlace;
    /**
     * 
     * @type {EntStudent}
     * @memberof EntActivityEdges
     */
    actiStud?: EntStudent;
    /**
     * 
     * @type {EntTerm}
     * @memberof EntActivityEdges
     */
    actiTerm?: EntTerm;
    /**
     * 
     * @type {EntYear}
     * @memberof EntActivityEdges
     */
    actiYear?: EntYear;
}

export function EntActivityEdgesFromJSON(json: any): EntActivityEdges {
    return EntActivityEdgesFromJSONTyped(json, false);
}

export function EntActivityEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntActivityEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actiAgen': !exists(json, 'ActiAgen') ? undefined : EntAgencyFromJSON(json['ActiAgen']),
        'actiPlace': !exists(json, 'ActiPlace') ? undefined : EntPlaceFromJSON(json['ActiPlace']),
        'actiStud': !exists(json, 'ActiStud') ? undefined : EntStudentFromJSON(json['ActiStud']),
        'actiTerm': !exists(json, 'ActiTerm') ? undefined : EntTermFromJSON(json['ActiTerm']),
        'actiYear': !exists(json, 'ActiYear') ? undefined : EntYearFromJSON(json['ActiYear']),
    };
}

export function EntActivityEdgesToJSON(value?: EntActivityEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actiAgen': EntAgencyToJSON(value.actiAgen),
        'actiPlace': EntPlaceToJSON(value.actiPlace),
        'actiStud': EntStudentToJSON(value.actiStud),
        'actiTerm': EntTermToJSON(value.actiTerm),
        'actiYear': EntYearToJSON(value.actiYear),
    };
}


