/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntContinent,
    EntContinentFromJSON,
    EntContinentFromJSONTyped,
    EntContinentToJSON,
    EntCountry,
    EntCountryFromJSON,
    EntCountryFromJSONTyped,
    EntCountryToJSON,
    EntRegion,
    EntRegionFromJSON,
    EntRegionFromJSONTyped,
    EntRegionToJSON,
    EntStudent,
    EntStudentFromJSON,
    EntStudentFromJSONTyped,
    EntStudentToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntProvinceEdges
 */
export interface EntProvinceEdges {
    /**
     * DistStud holds the value of the dist_stud edge.
     * @type {Array<EntStudent>}
     * @memberof EntProvinceEdges
     */
    distStud?: Array<EntStudent>;
    /**
     * PostStud holds the value of the post_stud edge.
     * @type {Array<EntStudent>}
     * @memberof EntProvinceEdges
     */
    postStud?: Array<EntStudent>;
    /**
     * 
     * @type {EntContinent}
     * @memberof EntProvinceEdges
     */
    provCont?: EntContinent;
    /**
     * 
     * @type {EntCountry}
     * @memberof EntProvinceEdges
     */
    provCoun?: EntCountry;
    /**
     * 
     * @type {EntRegion}
     * @memberof EntProvinceEdges
     */
    provRegi?: EntRegion;
    /**
     * ProvStud holds the value of the prov_stud edge.
     * @type {Array<EntStudent>}
     * @memberof EntProvinceEdges
     */
    provStud?: Array<EntStudent>;
    /**
     * SubdStud holds the value of the subd_stud edge.
     * @type {Array<EntStudent>}
     * @memberof EntProvinceEdges
     */
    subdStud?: Array<EntStudent>;
}

export function EntProvinceEdgesFromJSON(json: any): EntProvinceEdges {
    return EntProvinceEdgesFromJSONTyped(json, false);
}

export function EntProvinceEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntProvinceEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'distStud': !exists(json, 'DistStud') ? undefined : ((json['DistStud'] as Array<any>).map(EntStudentFromJSON)),
        'postStud': !exists(json, 'PostStud') ? undefined : ((json['PostStud'] as Array<any>).map(EntStudentFromJSON)),
        'provCont': !exists(json, 'ProvCont') ? undefined : EntContinentFromJSON(json['ProvCont']),
        'provCoun': !exists(json, 'ProvCoun') ? undefined : EntCountryFromJSON(json['ProvCoun']),
        'provRegi': !exists(json, 'ProvRegi') ? undefined : EntRegionFromJSON(json['ProvRegi']),
        'provStud': !exists(json, 'ProvStud') ? undefined : ((json['ProvStud'] as Array<any>).map(EntStudentFromJSON)),
        'subdStud': !exists(json, 'SubdStud') ? undefined : ((json['SubdStud'] as Array<any>).map(EntStudentFromJSON)),
    };
}

export function EntProvinceEdgesToJSON(value?: EntProvinceEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'distStud': value.distStud === undefined ? undefined : ((value.distStud as Array<any>).map(EntStudentToJSON)),
        'postStud': value.postStud === undefined ? undefined : ((value.postStud as Array<any>).map(EntStudentToJSON)),
        'provCont': EntContinentToJSON(value.provCont),
        'provCoun': EntCountryToJSON(value.provCoun),
        'provRegi': EntRegionToJSON(value.provRegi),
        'provStud': value.provStud === undefined ? undefined : ((value.provStud as Array<any>).map(EntStudentToJSON)),
        'subdStud': value.subdStud === undefined ? undefined : ((value.subdStud as Array<any>).map(EntStudentToJSON)),
    };
}


