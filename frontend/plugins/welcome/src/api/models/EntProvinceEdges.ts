/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntDistrict,
    EntDistrictFromJSON,
    EntDistrictFromJSONTyped,
    EntDistrictToJSON,
    EntRegion,
    EntRegionFromJSON,
    EntRegionFromJSONTyped,
    EntRegionToJSON,
    EntStudent,
    EntStudentFromJSON,
    EntStudentFromJSONTyped,
    EntStudentToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntProvinceEdges
 */
export interface EntProvinceEdges {
    /**
     * 
     * @type {EntDistrict}
     * @memberof EntProvinceEdges
     */
    provDist?: EntDistrict;
    /**
     * 
     * @type {EntRegion}
     * @memberof EntProvinceEdges
     */
    provRegi?: EntRegion;
    /**
     * ProvStud holds the value of the prov_stud edge.
     * @type {Array<EntStudent>}
     * @memberof EntProvinceEdges
     */
    provStud?: Array<EntStudent>;
}

export function EntProvinceEdgesFromJSON(json: any): EntProvinceEdges {
    return EntProvinceEdgesFromJSONTyped(json, false);
}

export function EntProvinceEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntProvinceEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'provDist': !exists(json, 'provDist') ? undefined : EntDistrictFromJSON(json['provDist']),
        'provRegi': !exists(json, 'provRegi') ? undefined : EntRegionFromJSON(json['provRegi']),
        'provStud': !exists(json, 'provStud') ? undefined : ((json['provStud'] as Array<any>).map(EntStudentFromJSON)),
    };
}

export function EntProvinceEdgesToJSON(value?: EntProvinceEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'provDist': EntDistrictToJSON(value.provDist),
        'provRegi': EntRegionToJSON(value.provRegi),
        'provStud': value.provStud === undefined ? undefined : ((value.provStud as Array<any>).map(EntStudentToJSON)),
    };
}


