/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Playlist Vidoe
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntCourseEdges,
    EntCourseEdgesFromJSON,
    EntCourseEdgesFromJSONTyped,
    EntCourseEdgesToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntCourse
 */
export interface EntCourse {
    /**
     * Annotation holds the value of the "annotation" field.
     * @type {string}
     * @memberof EntCourse
     */
    annotation?: string;
    /**
     * Course holds the value of the "course" field.
     * @type {string}
     * @memberof EntCourse
     */
    course?: string;
    /**
     * CourseID holds the value of the "course_id" field.
     * @type {number}
     * @memberof EntCourse
     */
    courseId?: number;
    /**
     * Credit holds the value of the "credit" field.
     * @type {number}
     * @memberof EntCourse
     */
    credit?: number;
    /**
     * 
     * @type {EntCourseEdges}
     * @memberof EntCourse
     */
    edges?: EntCourseEdges;
    /**
     * ID of the ent.
     * @type {number}
     * @memberof EntCourse
     */
    id?: number;
}

export function EntCourseFromJSON(json: any): EntCourse {
    return EntCourseFromJSONTyped(json, false);
}

export function EntCourseFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntCourse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'annotation': !exists(json, 'annotation') ? undefined : json['annotation'],
        'course': !exists(json, 'course') ? undefined : json['course'],
        'courseId': !exists(json, 'course_id') ? undefined : json['course_id'],
        'credit': !exists(json, 'credit') ? undefined : json['credit'],
        'edges': !exists(json, 'edges') ? undefined : EntCourseEdgesFromJSON(json['edges']),
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function EntCourseToJSON(value?: EntCourse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'annotation': value.annotation,
        'course': value.course,
        'course_id': value.courseId,
        'credit': value.credit,
        'edges': EntCourseEdgesToJSON(value.edges),
        'id': value.id,
    };
}


