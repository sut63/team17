// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/sut63/team17/app/ent/agency"
	"github.com/sut63/team17/app/ent/course"
	"github.com/sut63/team17/app/ent/degree"
	"github.com/sut63/team17/app/ent/district"
	"github.com/sut63/team17/app/ent/faculty"
	"github.com/sut63/team17/app/ent/institution"
	"github.com/sut63/team17/app/ent/place"
	"github.com/sut63/team17/app/ent/postal"
	"github.com/sut63/team17/app/ent/prefix"
	"github.com/sut63/team17/app/ent/professorship"
	"github.com/sut63/team17/app/ent/province"
	"github.com/sut63/team17/app/ent/region"
	"github.com/sut63/team17/app/ent/results"
	"github.com/sut63/team17/app/ent/schema"
	"github.com/sut63/team17/app/ent/student"
	"github.com/sut63/team17/app/ent/subdistrict"
	"github.com/sut63/team17/app/ent/subject"
	"github.com/sut63/team17/app/ent/term"
	"github.com/sut63/team17/app/ent/year"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	agencyFields := schema.Agency{}.Fields()
	_ = agencyFields
	// agencyDescAGENCY is the schema descriptor for AGENCY field.
	agencyDescAGENCY := agencyFields[0].Descriptor()
	// agency.AGENCYValidator is a validator for the "AGENCY" field. It is called by the builders before save.
	agency.AGENCYValidator = agencyDescAGENCY.Validators[0].(func(string) error)
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescCourse is the schema descriptor for course field.
	courseDescCourse := courseFields[0].Descriptor()
	// course.CourseValidator is a validator for the "course" field. It is called by the builders before save.
	course.CourseValidator = courseDescCourse.Validators[0].(func(string) error)
	degreeFields := schema.Degree{}.Fields()
	_ = degreeFields
	// degreeDescDegree is the schema descriptor for degree field.
	degreeDescDegree := degreeFields[0].Descriptor()
	// degree.DegreeValidator is a validator for the "degree" field. It is called by the builders before save.
	degree.DegreeValidator = degreeDescDegree.Validators[0].(func(string) error)
	districtFields := schema.District{}.Fields()
	_ = districtFields
	// districtDescDistrict is the schema descriptor for district field.
	districtDescDistrict := districtFields[0].Descriptor()
	// district.DistrictValidator is a validator for the "district" field. It is called by the builders before save.
	district.DistrictValidator = districtDescDistrict.Validators[0].(func(string) error)
	facultyFields := schema.Faculty{}.Fields()
	_ = facultyFields
	// facultyDescFaculty is the schema descriptor for faculty field.
	facultyDescFaculty := facultyFields[0].Descriptor()
	// faculty.FacultyValidator is a validator for the "faculty" field. It is called by the builders before save.
	faculty.FacultyValidator = facultyDescFaculty.Validators[0].(func(string) error)
	institutionFields := schema.Institution{}.Fields()
	_ = institutionFields
	// institutionDescInstitution is the schema descriptor for institution field.
	institutionDescInstitution := institutionFields[0].Descriptor()
	// institution.InstitutionValidator is a validator for the "institution" field. It is called by the builders before save.
	institution.InstitutionValidator = institutionDescInstitution.Validators[0].(func(string) error)
	placeFields := schema.Place{}.Fields()
	_ = placeFields
	// placeDescPLACE is the schema descriptor for PLACE field.
	placeDescPLACE := placeFields[0].Descriptor()
	// place.PLACEValidator is a validator for the "PLACE" field. It is called by the builders before save.
	place.PLACEValidator = placeDescPLACE.Validators[0].(func(string) error)
	postalFields := schema.Postal{}.Fields()
	_ = postalFields
	// postalDescPostal is the schema descriptor for postal field.
	postalDescPostal := postalFields[0].Descriptor()
	// postal.PostalValidator is a validator for the "postal" field. It is called by the builders before save.
	postal.PostalValidator = postalDescPostal.Validators[0].(func(string) error)
	prefixFields := schema.Prefix{}.Fields()
	_ = prefixFields
	// prefixDescPrefix is the schema descriptor for prefix field.
	prefixDescPrefix := prefixFields[0].Descriptor()
	// prefix.PrefixValidator is a validator for the "prefix" field. It is called by the builders before save.
	prefix.PrefixValidator = prefixDescPrefix.Validators[0].(func(string) error)
	professorshipFields := schema.Professorship{}.Fields()
	_ = professorshipFields
	// professorshipDescProfessorship is the schema descriptor for professorship field.
	professorshipDescProfessorship := professorshipFields[0].Descriptor()
	// professorship.ProfessorshipValidator is a validator for the "professorship" field. It is called by the builders before save.
	professorship.ProfessorshipValidator = professorshipDescProfessorship.Validators[0].(func(string) error)
	provinceFields := schema.Province{}.Fields()
	_ = provinceFields
	// provinceDescName is the schema descriptor for name field.
	provinceDescName := provinceFields[0].Descriptor()
	// province.NameValidator is a validator for the "name" field. It is called by the builders before save.
	province.NameValidator = provinceDescName.Validators[0].(func(string) error)
	regionFields := schema.Region{}.Fields()
	_ = regionFields
	// regionDescName is the schema descriptor for name field.
	regionDescName := regionFields[0].Descriptor()
	// region.NameValidator is a validator for the "name" field. It is called by the builders before save.
	region.NameValidator = regionDescName.Validators[0].(func(string) error)
	resultsFields := schema.Results{}.Fields()
	_ = resultsFields
	// resultsDescGrade is the schema descriptor for grade field.
	resultsDescGrade := resultsFields[0].Descriptor()
	// results.GradeValidator is a validator for the "grade" field. It is called by the builders before save.
	results.GradeValidator = resultsDescGrade.Validators[0].(func(float64) error)
	studentFields := schema.Student{}.Fields()
	_ = studentFields
	// studentDescFname is the schema descriptor for fname field.
	studentDescFname := studentFields[0].Descriptor()
	// student.FnameValidator is a validator for the "fname" field. It is called by the builders before save.
	student.FnameValidator = studentDescFname.Validators[0].(func(string) error)
	// studentDescLname is the schema descriptor for lname field.
	studentDescLname := studentFields[1].Descriptor()
	// student.LnameValidator is a validator for the "lname" field. It is called by the builders before save.
	student.LnameValidator = studentDescLname.Validators[0].(func(string) error)
	// studentDescSchoolname is the schema descriptor for schoolname field.
	studentDescSchoolname := studentFields[2].Descriptor()
	// student.SchoolnameValidator is a validator for the "schoolname" field. It is called by the builders before save.
	student.SchoolnameValidator = studentDescSchoolname.Validators[0].(func(string) error)
	// studentDescRecentAddress is the schema descriptor for recent_address field.
	studentDescRecentAddress := studentFields[3].Descriptor()
	// student.RecentAddressValidator is a validator for the "recent_address" field. It is called by the builders before save.
	student.RecentAddressValidator = studentDescRecentAddress.Validators[0].(func(string) error)
	subdistrictFields := schema.Subdistrict{}.Fields()
	_ = subdistrictFields
	// subdistrictDescSubdistrict is the schema descriptor for subdistrict field.
	subdistrictDescSubdistrict := subdistrictFields[0].Descriptor()
	// subdistrict.SubdistrictValidator is a validator for the "subdistrict" field. It is called by the builders before save.
	subdistrict.SubdistrictValidator = subdistrictDescSubdistrict.Validators[0].(func(string) error)
	subjectFields := schema.Subject{}.Fields()
	_ = subjectFields
	// subjectDescCode is the schema descriptor for code field.
	subjectDescCode := subjectFields[0].Descriptor()
	// subject.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	subject.CodeValidator = subjectDescCode.Validators[0].(func(int) error)
	// subjectDescSubjects is the schema descriptor for subjects field.
	subjectDescSubjects := subjectFields[1].Descriptor()
	// subject.SubjectsValidator is a validator for the "subjects" field. It is called by the builders before save.
	subject.SubjectsValidator = subjectDescSubjects.Validators[0].(func(string) error)
	// subjectDescCreditpiont is the schema descriptor for creditpiont field.
	subjectDescCreditpiont := subjectFields[2].Descriptor()
	// subject.CreditpiontValidator is a validator for the "creditpiont" field. It is called by the builders before save.
	subject.CreditpiontValidator = subjectDescCreditpiont.Validators[0].(func(int) error)
	termFields := schema.Term{}.Fields()
	_ = termFields
	// termDescSemester is the schema descriptor for semester field.
	termDescSemester := termFields[0].Descriptor()
	// term.SemesterValidator is a validator for the "semester" field. It is called by the builders before save.
	term.SemesterValidator = termDescSemester.Validators[0].(func(int) error)
	yearFields := schema.Year{}.Fields()
	_ = yearFields
	// yearDescYears is the schema descriptor for years field.
	yearDescYears := yearFields[0].Descriptor()
	// year.YearsValidator is a validator for the "years" field. It is called by the builders before save.
	year.YearsValidator = yearDescYears.Validators[0].(func(int) error)
}
