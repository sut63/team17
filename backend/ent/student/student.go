// Code generated by entc, DO NOT EDIT.

package student

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFname holds the string denoting the fname field in the database.
	FieldFname = "fname"
	// FieldLname holds the string denoting the lname field in the database.
	FieldLname = "lname"
	// FieldSchoolname holds the string denoting the schoolname field in the database.
	FieldSchoolname = "schoolname"
	// FieldRecentAddress holds the string denoting the recent_address field in the database.
	FieldRecentAddress = "recent_address"
	// FieldTelephone holds the string denoting the telephone field in the database.
	FieldTelephone = "telephone"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"

	// EdgeStudGend holds the string denoting the stud_gend edge name in mutations.
	EdgeStudGend = "stud_gend"
	// EdgeStudActi holds the string denoting the stud_acti edge name in mutations.
	EdgeStudActi = "stud_acti"
	// EdgeStudResu holds the string denoting the stud_resu edge name in mutations.
	EdgeStudResu = "stud_resu"
	// EdgeStudProv holds the string denoting the stud_prov edge name in mutations.
	EdgeStudProv = "stud_prov"
	// EdgeStudDist holds the string denoting the stud_dist edge name in mutations.
	EdgeStudDist = "stud_dist"
	// EdgeStudSubd holds the string denoting the stud_subd edge name in mutations.
	EdgeStudSubd = "stud_subd"
	// EdgeStudPost holds the string denoting the stud_post edge name in mutations.
	EdgeStudPost = "stud_post"
	// EdgeStudPref holds the string denoting the stud_pref edge name in mutations.
	EdgeStudPref = "stud_pref"
	// EdgeStudDegr holds the string denoting the stud_degr edge name in mutations.
	EdgeStudDegr = "stud_degr"

	// Table holds the table name of the student in the database.
	Table = "students"
	// StudGendTable is the table the holds the stud_gend relation/edge.
	StudGendTable = "students"
	// StudGendInverseTable is the table name for the Gender entity.
	// It exists in this package in order to avoid circular dependency with the "gender" package.
	StudGendInverseTable = "genders"
	// StudGendColumn is the table column denoting the stud_gend relation/edge.
	StudGendColumn = "gender_gend_stud"
	// StudActiTable is the table the holds the stud_acti relation/edge.
	StudActiTable = "activities"
	// StudActiInverseTable is the table name for the Activity entity.
	// It exists in this package in order to avoid circular dependency with the "activity" package.
	StudActiInverseTable = "activities"
	// StudActiColumn is the table column denoting the stud_acti relation/edge.
	StudActiColumn = "student_stud_acti"
	// StudResuTable is the table the holds the stud_resu relation/edge.
	StudResuTable = "results"
	// StudResuInverseTable is the table name for the Results entity.
	// It exists in this package in order to avoid circular dependency with the "results" package.
	StudResuInverseTable = "results"
	// StudResuColumn is the table column denoting the stud_resu relation/edge.
	StudResuColumn = "student_stud_resu"
	// StudProvTable is the table the holds the stud_prov relation/edge.
	StudProvTable = "students"
	// StudProvInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	StudProvInverseTable = "provinces"
	// StudProvColumn is the table column denoting the stud_prov relation/edge.
	StudProvColumn = "province_prov_stud"
	// StudDistTable is the table the holds the stud_dist relation/edge.
	StudDistTable = "students"
	// StudDistInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	StudDistInverseTable = "provinces"
	// StudDistColumn is the table column denoting the stud_dist relation/edge.
	StudDistColumn = "province_dist_stud"
	// StudSubdTable is the table the holds the stud_subd relation/edge.
	StudSubdTable = "students"
	// StudSubdInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	StudSubdInverseTable = "provinces"
	// StudSubdColumn is the table column denoting the stud_subd relation/edge.
	StudSubdColumn = "province_subd_stud"
	// StudPostTable is the table the holds the stud_post relation/edge.
	StudPostTable = "students"
	// StudPostInverseTable is the table name for the Province entity.
	// It exists in this package in order to avoid circular dependency with the "province" package.
	StudPostInverseTable = "provinces"
	// StudPostColumn is the table column denoting the stud_post relation/edge.
	StudPostColumn = "province_post_stud"
	// StudPrefTable is the table the holds the stud_pref relation/edge.
	StudPrefTable = "students"
	// StudPrefInverseTable is the table name for the Prefix entity.
	// It exists in this package in order to avoid circular dependency with the "prefix" package.
	StudPrefInverseTable = "prefixes"
	// StudPrefColumn is the table column denoting the stud_pref relation/edge.
	StudPrefColumn = "prefix_pref_stud"
	// StudDegrTable is the table the holds the stud_degr relation/edge.
	StudDegrTable = "students"
	// StudDegrInverseTable is the table name for the Degree entity.
	// It exists in this package in order to avoid circular dependency with the "degree" package.
	StudDegrInverseTable = "degrees"
	// StudDegrColumn is the table column denoting the stud_degr relation/edge.
	StudDegrColumn = "degree_degr_stud"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldFname,
	FieldLname,
	FieldSchoolname,
	FieldRecentAddress,
	FieldTelephone,
	FieldEmail,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Student type.
var ForeignKeys = []string{
	"degree_degr_stud",
	"gender_gend_stud",
	"prefix_pref_stud",
	"province_prov_stud",
	"province_dist_stud",
	"province_subd_stud",
	"province_post_stud",
}

var (
	// FnameValidator is a validator for the "fname" field. It is called by the builders before save.
	FnameValidator func(string) error
	// LnameValidator is a validator for the "lname" field. It is called by the builders before save.
	LnameValidator func(string) error
	// SchoolnameValidator is a validator for the "schoolname" field. It is called by the builders before save.
	SchoolnameValidator func(string) error
	// RecentAddressValidator is a validator for the "recent_address" field. It is called by the builders before save.
	RecentAddressValidator func(string) error
)
